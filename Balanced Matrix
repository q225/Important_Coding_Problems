Problem Statement:

You are given a rectangular matrix with N rows and M columns, and you need to check whether the given matrix is balanced or not.

A matrix is balanced if all cells in the matrix are balanced and a cell of the matrix is balanced if the number of cells in that matrix which are adjacent to that cell are strictly greater than the value written in this cell.


#include<bits/stdc++.h>
using namespace std;

int main()
{
    
        int N = 4, M = 4; 
        bool is_balanced = true;
      
        int A[N][M]={ {1,2 ,3 ,4,},
                      {3, 5, 2, 6},
                      {5, 3, 6, 1},
                      {9, 5, 6, 0 } } ;

         
        for(int i = 0; i < N && is_balanced ;i++)  //loop will execute until the condition remain true
        {
            for(int j = 0; j< M && is_balanced ;j++)  // loop will execute until the condition remain true 
            {
                if( (i == 0||i == N-1) && (j == 0||j == M-1) ) // checking for corner edge elements
                {
                    if(A[i][j] >= 2) 
                     is_balanced = false;
                }
                else if(i == 0||i == N-1||j == 0||j == M-1) // checking for border elements
                    {
                    if(A[i][j] >= 3) 
                      is_balanced = false;
                    }
                else{    //checking for the middle ones
                    if(A[i][j] >= 4) 
                      is_balanced = false;
                }
            }
        }
  
        if(is_balanced) 
        cout << "Balanced\n";
        else 
        cout << "Unbalnced\n";
    return 0;
}
